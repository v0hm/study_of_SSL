%% MAIN START HEADER

global  Blues Yellows Balls Rules FieldInfo RefState RefCommandForTeam RefPartOfFieldLeft RP PAR Modul activeAlgorithm obstacles gameStatus i naprav f

if isempty(RP)
    addpath tools RPtools MODUL
end
%
mainHeader();
%MAP();

if (RP.Pause) 
    return;
end

zMain_End=RP.zMain_End;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% CONTROL BLOCK


% % % % % % if isempty(hist_ball)
%    hist_ball = RP.Ball.z;
%    i = 1;
% end
% if (norm(hist_ball(i,:)-RP.Ball.z)) > 100
%     
%     i = i + 1;
%     hist_ball(i, :) = RP.Ball.z;
% else
%     i = i + 1;
%     hist_ball(i, :) = RP.Ball.z;
% end
% if i > 1
%     [k b] = polifit(hist_ball);
% end
%     x_tr = (RP.Ball.y - b)/k;
%     point1 = [x_tr RP.Ball.y];
%     speed = goToPoint(RP.Blue(1),point1,20);
%     point2 = [RP.Blue.x RP.Blue.y+100];
%     speedr = rotateToPoint(RP.Blue(1),point2,20);
% % % % % %     RP.Blue(1).rul = Crul(speed(1),speed(2),0,speedr,0);
r = 300;
warning = [0 0];
if i == 1
    target = [1300 0];
else
   target = [-1300 0];
end
agent = RP.Blue(1);


if block(agent,target,warning) == 1
    speed = goToPointRL(agent,warning,20);
    disp('1');
    if norm(agent.z - warning) < 10 + r
        speed = goToPoint(agent,target,20);
    end
else
    speed = goToPoint(agent,target,20);
    disp('2');
end    
RP.Blue(1).rul = Crul(speed(1),speed(2),0,0,0);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% MAIN END

%Rules

zMain_End = mainEnd();